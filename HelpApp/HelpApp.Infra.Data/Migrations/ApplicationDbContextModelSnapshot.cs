// <auto-generated />
using HelpApp.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpApp.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HelpApp.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Material Escolar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Eletrônicos"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Acessórios"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Frutas"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Carnes"
                        });
                });

            modelBuilder.Entity("HelpApp.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Lapiseira ponteira 0.7",
                            Image = "lapiseira07.png",
                            Name = "Lapiseira",
                            Price = 11.99m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Smartwatch 2025",
                            Image = "smartwatch2025.jpg",
                            Name = "Smartwatch",
                            Price = 300.00m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Brinco de prata",
                            Image = "brincoprata.jpg",
                            Name = "Brinco",
                            Price = 54.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Laranja Pera",
                            Image = "laranjapera.jpg",
                            Name = "Laranja",
                            Price = 9.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Contra Filé Bovino",
                            Image = "contrafile.jpg",
                            Name = "Contra Filé",
                            Price = 49.90m,
                            Stock = 15
                        });
                });

            modelBuilder.Entity("HelpApp.Domain.Entities.Product", b =>
                {
                    b.HasOne("HelpApp.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HelpApp.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
